/** @jsx wp.element.createElement */

const { __ } = wp.i18n;
const { registerBlockType } = wp.blocks;
const { InnerBlocks } = wp.blockEditor;
const { BlockControls, InspectorControls, BlockEdit  } = wp.blockEditor;
const { useState, Fragment, useEffect } = wp.element;
const { Button } = wp.components;
const { useSelect } = wp.data;

import { bootstrapValignClasses } from '../common/common-functions.js';
import { PannelUltimateBgControl } from '../common/PannelUltimateBgControl.js';
import { Controls } from './controls.js';


const SectionBlockIcon = () => (
  <svg width="20" height="24" viewBox="0 0 20 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M18 3H2C1.44772 3 1 3.44772 1 4V20C1 20.5523 1.44772 21 2 21H18C18.5523 21 19 20.5523 19 20V4C19 3.44772 18.5523 3 18 3Z" fill="#c10000"/>
  </svg>
)


/*============================================================================*/
/*                              PARENTBLOCK BEGIN                             */
/*============================================================================*/

registerBlockType( 'k-blocks-bs-gallery/k-blocks', {
	title: __( 'BS NEW' ),
	icon: SectionBlockIcon,
	category: 'k-common-blocks',
	//parent: [ 'core/post-content' ], // only root block
	supports: { align: [ 'full' ], anchor: true, html : false},
	attributes: {
    className: { type: 'string', },
    anchor: { type: 'string', },
	},


/*============================================================================*/
/*                                   EDIT                                     */
/*============================================================================*/

	edit(props) {

    var innerColumns = useSelect( ( select ) => select( 'core/block-editor' ).getBlock( props.clientId ),  [ props.clientId ] );
    console.log( innerColumns );

    useEffect(() => {

    });


    /*var $slideshow = jQuery('#ephad-gallery').slick({
      dots: true,
      infinite: true,
      speed: 300,
      slidesToShow: 1,
      adaptiveHeight: true
    });*/

    jQuery(document).on('click', '[data-toggle="lightbox"]', function(event) {
      event.preventDefault();
      jQuery(this).ekkoLightbox();
    });

		return (
      <Fragment>

        {/* BLOCK CONTROLS IMPORT */}
        <Controls propsObject={props} />

        {/* EDIT RENDER
        ========================================================================*/}

        <div className={ ""+props.attributes.className }>

          <h1>TEST AREA</h1>

          {/*<div id="ephad-gallery">
            <div>
              <a href="https://eephad75.com/wp-content/uploads/2021/01/0ORPEAINES.png" data-toggle="lightbox">
            <img className="w-100" src="https://eephad75.com/wp-content/uploads/2021/01/0ORPEAINES.png" alt="0ORPEAINES" title="0ORPEAINES" />
              </a>
            </div>
            <div>
              <a href="https://eephad75.com/wp-content/uploads/2021/01/1JARDINSINES.png" data-toggle="lightbox">
            <img className="w-100" src="https://eephad75.com/wp-content/uploads/2021/01/1JARDINSINES.png" alt="1JARDINSINES" title="1JARDINSINES" />
              </a>
            </div>
            <div>
              <a href="https://eephad75.com/wp-content/uploads/2021/01/2ORPEACAGNES.png" data-toggle="lightbox">
            <img className="w-100" src="https://eephad75.com/wp-content/uploads/2021/01/2ORPEACAGNES.png" alt="2ORPEACAGNES" title="2ORPEACAGNES" />
              </a>
            </div>
          </div>*/}


          <h1>PARENT HEADER CONTENT - EDIT</h1>

          <h2>{  }</h2>


            <InnerBlocks
              allowedBlocks={[ 'k-blocks-bs-gallery-child/k-blocks' ]}
              renderAppender={ () => (<InnerBlocks.ButtonBlockAppender />) }
              orientation="vertical"
            />

          </div>

    </Fragment>
		);
	},


  /*===========================================================================*/
  /*                                   SAVE                                    */
  /*===========================================================================*/

	save(props) {

    return (

      <div className={ ""+props.attributes.className }>

        <h1>PARENT HEADER CONTENT</h1>
        <InnerBlocks.Content />

      </div>

		);

	},


} );



function print_r(arr, level) {
var print_red_text = "";
if(!level) level = 0;
var level_padding = "";
for(var j=0; j<level+1; j++) level_padding += "    ";
if(typeof(arr) == 'object') {
    for(var item in arr) {
        var value = arr[item];
        if(typeof(value) == 'object') {
            print_red_text += level_padding + "'" + item + "' :\n";
            print_red_text += print_r(value,level+1);
}
        else
            print_red_text += level_padding + "'" + item + "' => \"" + value + "\"\n";
    }
}
else  print_red_text = "===>"+arr+"<===("+typeof(arr)+")";
return print_red_text;
}



/*============================================================================*/
/*                             CHILD BLOCK BEGIN                              */
/*============================================================================*/

registerBlockType( 'k-blocks-bs-gallery-child/k-blocks', {
	title: __( 'gallery Slide' ),
	icon: SectionBlockIcon,
	category: 'k-common-blocks',
	parent: [ 'k-blocks-bs-gallery' ],
	supports: { html: false, className: false },
	attributes: {
    className: { type: 'string', },
    content: { type: 'string', },
	},


/*=============================================================================*/
/*                                    EDIT                                     */
/*=============================================================================*/

	edit(props) {

		return (
      <Fragment>
        <div className={ "bg-primary text-white p-3" }>
          <InnerBlocks
            templateInsertUpdatesSelection={ true }
          />
        </div>
      </Fragment>
		);
	},

  /*===========================================================================*/
  /*                                   SAVE                                    */
  /*===========================================================================*/

	save(props) {
        return (
          <Fragment>
            <div className={ "bg-primary text-white p-3" }>
              <InnerBlocks.Content />
            </div>
          </Fragment>
		);

	},
} );
